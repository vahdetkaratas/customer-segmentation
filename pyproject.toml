[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "customer-segmentation"
version = "0.1.0"
description = "Customer segmentation using RFM analysis and machine learning clustering"
authors = [
    {name = "Data Scientist", email = "data.scientist@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.1.0",
    "plotly>=5.0.0",
    "streamlit>=1.20.0",
    "jupyter>=1.0.0",
    "openpyxl>=3.0.0",
    "xlrd>=2.0.0",
    "pytest>=7.0.0",
    "joblib>=1.1.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "pytest-cov>=4.0.0",
]

[tool.black]
line-length = 88
target-version = ["py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
src = ["src", "streamlit_app", "scripts", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "PL", "W"]
ignore = ["E501", "PLR0912", "PLR0915", "PLR2004", "E722"]  # Ignore complex function warnings
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR2004"]  # Allow magic numbers in tests
"src/app_core.py" = ["PLR0912", "PLR0915"]  # Allow complex functions in app core
"src/interpretation_reporting.py" = ["PLR0915", "PLR2004"]  # Allow complex functions and magic numbers
"streamlit_app/app.py" = ["PLR0912", "PLR0915"]  # Allow complex functions in streamlit app

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["src", "streamlit_app", "scripts", "tests"]
known_first_party = ["src", "streamlit_app"]

[tool.pytest.ini_options]
addopts = "-q --maxfail=1 --disable-warnings"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
